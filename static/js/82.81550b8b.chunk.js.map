{"version":3,"file":"static/js/82.81550b8b.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://phonebook/./src/pages/Contacts/ContactsPage.module.css?3d45","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormLabel\":\"ContactForm_contactFormLabel__16ABo\",\"contactFormInput\":\"ContactForm_contactFormInput__eC5HJ\",\"addContactBtn\":\"ContactForm_addContactBtn__3KI6e\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContactThunk } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactMap = { name: setName, number: setNumber };\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    contactMap[name](value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isAlreadyInContacts = preventAddingSameContact(name);\n\n    if (isAlreadyInContacts) {\n      toast.info(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number })).catch(() =>\n      toast.error('Server request error. Please try again.')\n    );\n    setName('');\n    setNumber('');\n  };\n\n  const preventAddingSameContact = name => {\n    const normalizedName = name.toLowerCase();\n\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.contactFormLabel}>\n        <span>Name</span>\n        \n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+((?:'[a-zA-Zа-яА-Я\\s])?(?:-[a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я\\s]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <label className={css.contactFormLabel}>\n        <span>Number</span>\n        \n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}[\\s]?[\\-]?\\(?\\d{1,3}?\\)?[\\s]?[\\-]?\\d{1,4}[\\s]?[\\-]?\\d{1,4}[\\s]?[\\-]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button className={css.addContactBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterLabelText\":\"Filter_filterLabelText__--6ov\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(addFilter(event.target.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      <span className={css.filterLabelText}>Find contact by name</span>\n\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"title\":\"ContactList_title__gpugJ\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { deleteContactThunk } from 'redux/operations';\nimport { selectContacts, selectFilteredContacts } from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nimport { VscAccount } from \"react-icons/vsc\";\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {contacts.length === 0 ? (\n        <h3 className={css.title}>There are no contacts in your phone book.</h3>\n      ) : (\n        <ul className={css.contactList}>\n          {filteredContacts.map(({ name, id, number }) => (\n            <li key={id} className={css.contactListItem}>\n              <p>\n                <span><VscAccount/>  </span>\n                \n                <span>{`${name}: `}</span>\n                <span>{number}</span>\n              </p>\n              <button\n                className={css.contactListItemBtn}\n                type=\"button\"\n                onClick={() =>\n                  dispatch(deleteContactThunk(id)).catch(() =>\n                    toast.error('Server request error. Please try again.')\n                  )\n                }\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__jIags\",\"title\":\"ContactsPage_title__TdWmn\",\"contactsWrapper\":\"ContactsPage_contactsWrapper__y3nKo\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectIsLoading } from 'redux/selectors';\nimport { fetchContactsThunk } from 'redux/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk()).catch(() =>\n      toast.error('Server request error. Please try again.')\n    );\n  }, [dispatch]);\n  return (\n    <div className={css.container}>\n      <div className={css.phoneBookWrapper}>\n        <ContactForm />\n      </div>\n\n      <div className={css.contactsWrapper}>\n        <h2 className={css.title}>My Contacts</h2>\n        <Filter />\n        {isLoading ? <Loader /> : <ContactList />}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","value","selectIsLoading","isLoading","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","name","includes","ContactForm","useState","setName","number","setNumber","contactMap","dispatch","useDispatch","useSelector","handleInputChange","target","preventAddingSameContact","normalizedName","find","contact","className","css","onSubmit","event","preventDefault","toast","addContactThunk","catch","type","pattern","title","required","onChange","Filter","addFilter","ContactList","filteredContacts","length","map","id","onClick","deleteContactThunk","useEffect","fetchContactsThunk","Loader"],"sourceRoot":""}